buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 
apply plugin: 'docker'

// This is used as the docker image prefix (org)
group = 'service'

jar {
	baseName = 'customer'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

task buildDocker(type: Docker, dependsOn: build) {
  push = false
  applicationName = jar.baseName
  dockerfile = file('src/main/docker/Dockerfile')

  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile 'org.springframework.data:spring-data-cassandra:1.3.4.RELEASE'
	testCompile('org.springframework.boot:spring-boot-starter-test') 
	testCompile('io.dropwizard.metrics:metrics-core:3.1.0')
	testCompile('org.cassandraunit:cassandra-unit-spring:2.2.2.1');
}

test {
	testLogging {
		showStandardStreams = true
	} 
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}
